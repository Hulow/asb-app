version: '2.4'
services:
  postgres:
    container_name: database
    build:
      context: ./backend
      dockerfile: db.Dockerfile
    env_file:
      - /var/www/shared/env/.env
    volumes:
      - 'postgres:/var/lib/postgresql/data'
    ports:
      - '5432:5432'
  backend:
    container_name: asb-app
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - /var/www/shared/env/.env
    depends_on:
      - postgres

  frontend:
    image: asb-ui:latest
    container_name: asb-ui
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - /var/www/shared/env/.env
  proxy:
    image: nginx:alpine
    container_name: proxy
    ports:
      - "80:80" #http port
      - "443:443" #https port
    volumes:
      - ./backend/nginx.conf:/etc/nginx/nginx.conf # we map this file into the container
      - ./backend/certbot/conf:/etc/letsencrypt
      - ./backend/certbot/www:/var/www/certbot
  certbot: # service creating this challenge file for lets encrypt
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./backend/certbot/conf:/etc/letsencrypt # same volume than nginx, so they can communicate with each other
      - ./backend/certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email victor@anechoic-station-berlin.com -d anechoic-station-berlin.com -d www.anechoic-station-berlin.com --agree-tos

volumes:
  postgres:
